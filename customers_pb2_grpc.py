# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import customers_pb2 as customers__pb2


class CustomerServiceStub(object):
    """CustomerService라는 gRPC 서비스를 정의
    GetAll: 매개변수 없이 CustomerList를 반환하는 메소드입니다.
    Get: CustomerRequestId를 매개변수로 받고, 해당 Customer를 반환하는 메소드입니다.
    Insert: Customer를 매개변수로 받고, 추가된 Customer를 반환하는 메소드입니다.
    Update: Customer를 매개변수로 받고, 업데이트된 Customer를 반환하는 메소드입니다.
    Remove: CustomerRequestId를 매개변수로 받고, 아무 값도 반환하지 않는 메소드입니다.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAll = channel.unary_unary(
                '/CustomerService/GetAll',
                request_serializer=customers__pb2.Empty.SerializeToString,
                response_deserializer=customers__pb2.CustomerList.FromString,
                )
        self.Get = channel.unary_unary(
                '/CustomerService/Get',
                request_serializer=customers__pb2.CustomerRequestId.SerializeToString,
                response_deserializer=customers__pb2.Customer.FromString,
                )
        self.Insert = channel.unary_unary(
                '/CustomerService/Insert',
                request_serializer=customers__pb2.Customer.SerializeToString,
                response_deserializer=customers__pb2.Customer.FromString,
                )
        self.Update = channel.unary_unary(
                '/CustomerService/Update',
                request_serializer=customers__pb2.Customer.SerializeToString,
                response_deserializer=customers__pb2.Customer.FromString,
                )
        self.Remove = channel.unary_unary(
                '/CustomerService/Remove',
                request_serializer=customers__pb2.CustomerRequestId.SerializeToString,
                response_deserializer=customers__pb2.Empty.FromString,
                )


class CustomerServiceServicer(object):
    """CustomerService라는 gRPC 서비스를 정의
    GetAll: 매개변수 없이 CustomerList를 반환하는 메소드입니다.
    Get: CustomerRequestId를 매개변수로 받고, 해당 Customer를 반환하는 메소드입니다.
    Insert: Customer를 매개변수로 받고, 추가된 Customer를 반환하는 메소드입니다.
    Update: Customer를 매개변수로 받고, 업데이트된 Customer를 반환하는 메소드입니다.
    Remove: CustomerRequestId를 매개변수로 받고, 아무 값도 반환하지 않는 메소드입니다.

    """

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Insert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAll': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=customers__pb2.Empty.FromString,
                    response_serializer=customers__pb2.CustomerList.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=customers__pb2.CustomerRequestId.FromString,
                    response_serializer=customers__pb2.Customer.SerializeToString,
            ),
            'Insert': grpc.unary_unary_rpc_method_handler(
                    servicer.Insert,
                    request_deserializer=customers__pb2.Customer.FromString,
                    response_serializer=customers__pb2.Customer.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=customers__pb2.Customer.FromString,
                    response_serializer=customers__pb2.Customer.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=customers__pb2.CustomerRequestId.FromString,
                    response_serializer=customers__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CustomerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerService(object):
    """CustomerService라는 gRPC 서비스를 정의
    GetAll: 매개변수 없이 CustomerList를 반환하는 메소드입니다.
    Get: CustomerRequestId를 매개변수로 받고, 해당 Customer를 반환하는 메소드입니다.
    Insert: Customer를 매개변수로 받고, 추가된 Customer를 반환하는 메소드입니다.
    Update: Customer를 매개변수로 받고, 업데이트된 Customer를 반환하는 메소드입니다.
    Remove: CustomerRequestId를 매개변수로 받고, 아무 값도 반환하지 않는 메소드입니다.

    """

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerService/GetAll',
            customers__pb2.Empty.SerializeToString,
            customers__pb2.CustomerList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerService/Get',
            customers__pb2.CustomerRequestId.SerializeToString,
            customers__pb2.Customer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerService/Insert',
            customers__pb2.Customer.SerializeToString,
            customers__pb2.Customer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerService/Update',
            customers__pb2.Customer.SerializeToString,
            customers__pb2.Customer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CustomerService/Remove',
            customers__pb2.CustomerRequestId.SerializeToString,
            customers__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
